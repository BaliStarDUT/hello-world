<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.james.dao.LolHerosMapper">
  <resultMap id="BaseResultMap" type="net.james.dao.LolHeros">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="headpic_url" jdbcType="VARCHAR" property="headpicUrl" />
    <result column="name_cn" jdbcType="VARCHAR" property="nameCn" />
    <result column="name_en" jdbcType="VARCHAR" property="nameEn" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="sounds_url" jdbcType="VARCHAR" property="soundsUrl" />
    <result column="story" jdbcType="VARCHAR" property="story" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.james.dao.LolHeros">
    <result column="headpic" jdbcType="LONGVARBINARY" property="headpic" />
    <result column="sounds" jdbcType="LONGVARBINARY" property="sounds" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, headpic_url, name_cn, name_en, nickname, sounds_url, story, type
  </sql>
  <sql id="Blob_Column_List">
    headpic, sounds
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.james.dao.LolHerosExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lolheros
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.james.dao.LolHerosExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from lolheros
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lolheros
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lolheros
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.james.dao.LolHerosExample">
    delete from lolheros
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.james.dao.LolHeros">
    insert into lolheros (id, headpic_url, name_cn, 
      name_en, nickname, sounds_url, 
      story, type, headpic, 
      sounds)
    values (#{id,jdbcType=INTEGER}, #{headpicUrl,jdbcType=VARCHAR}, #{nameCn,jdbcType=VARCHAR}, 
      #{nameEn,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{soundsUrl,jdbcType=VARCHAR}, 
      #{story,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{headpic,jdbcType=LONGVARBINARY}, 
      #{sounds,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="net.james.dao.LolHeros">
    insert into lolheros
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="headpicUrl != null">
        headpic_url,
      </if>
      <if test="nameCn != null">
        name_cn,
      </if>
      <if test="nameEn != null">
        name_en,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="soundsUrl != null">
        sounds_url,
      </if>
      <if test="story != null">
        story,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="headpic != null">
        headpic,
      </if>
      <if test="sounds != null">
        sounds,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="headpicUrl != null">
        #{headpicUrl,jdbcType=VARCHAR},
      </if>
      <if test="nameCn != null">
        #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null">
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="soundsUrl != null">
        #{soundsUrl,jdbcType=VARCHAR},
      </if>
      <if test="story != null">
        #{story,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="headpic != null">
        #{headpic,jdbcType=LONGVARBINARY},
      </if>
      <if test="sounds != null">
        #{sounds,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.james.dao.LolHerosExample" resultType="java.lang.Long">
    select count(*) from lolheros
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lolheros
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.headpicUrl != null">
        headpic_url = #{record.headpicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.nameCn != null">
        name_cn = #{record.nameCn,jdbcType=VARCHAR},
      </if>
      <if test="record.nameEn != null">
        name_en = #{record.nameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.soundsUrl != null">
        sounds_url = #{record.soundsUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.story != null">
        story = #{record.story,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.headpic != null">
        headpic = #{record.headpic,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.sounds != null">
        sounds = #{record.sounds,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update lolheros
    set id = #{record.id,jdbcType=INTEGER},
      headpic_url = #{record.headpicUrl,jdbcType=VARCHAR},
      name_cn = #{record.nameCn,jdbcType=VARCHAR},
      name_en = #{record.nameEn,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      sounds_url = #{record.soundsUrl,jdbcType=VARCHAR},
      story = #{record.story,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      headpic = #{record.headpic,jdbcType=LONGVARBINARY},
      sounds = #{record.sounds,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lolheros
    set id = #{record.id,jdbcType=INTEGER},
      headpic_url = #{record.headpicUrl,jdbcType=VARCHAR},
      name_cn = #{record.nameCn,jdbcType=VARCHAR},
      name_en = #{record.nameEn,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      sounds_url = #{record.soundsUrl,jdbcType=VARCHAR},
      story = #{record.story,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.james.dao.LolHeros">
    update lolheros
    <set>
      <if test="headpicUrl != null">
        headpic_url = #{headpicUrl,jdbcType=VARCHAR},
      </if>
      <if test="nameCn != null">
        name_cn = #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null">
        name_en = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="soundsUrl != null">
        sounds_url = #{soundsUrl,jdbcType=VARCHAR},
      </if>
      <if test="story != null">
        story = #{story,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="headpic != null">
        headpic = #{headpic,jdbcType=LONGVARBINARY},
      </if>
      <if test="sounds != null">
        sounds = #{sounds,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.james.dao.LolHeros">
    update lolheros
    set headpic_url = #{headpicUrl,jdbcType=VARCHAR},
      name_cn = #{nameCn,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sounds_url = #{soundsUrl,jdbcType=VARCHAR},
      story = #{story,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      headpic = #{headpic,jdbcType=LONGVARBINARY},
      sounds = #{sounds,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.james.dao.LolHeros">
    update lolheros
    set headpic_url = #{headpicUrl,jdbcType=VARCHAR},
      name_cn = #{nameCn,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sounds_url = #{soundsUrl,jdbcType=VARCHAR},
      story = #{story,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>